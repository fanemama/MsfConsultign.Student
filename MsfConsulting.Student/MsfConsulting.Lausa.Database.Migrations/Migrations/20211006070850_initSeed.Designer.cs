// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MsfConsulting.Lausa.Domain.Repository;

namespace MsfConsulting.Lausa.Database.Migrations.Migrations
{
    [DbContext(typeof(LausaDbContext))]
    [Migration("20211006070850_initSeed")]
    partial class initSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("MsfConsulting.Lausa.Domain.Model.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Label")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Physic",
                            Label = "Physic"
                        },
                        new
                        {
                            Id = 2,
                            Code = "Mathematic",
                            Label = "Mathematic"
                        },
                        new
                        {
                            Id = 3,
                            Code = "Biologic",
                            Label = "Biologic"
                        },
                        new
                        {
                            Id = 4,
                            Code = "Geographic",
                            Label = "Geographic"
                        });
                });

            modelBuilder.Entity("MsfConsulting.Lausa.Domain.Model.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("GradeId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("GradeId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("MsfConsulting.Lausa.Domain.Model.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Label")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "A",
                            Label = "A"
                        },
                        new
                        {
                            Id = 2,
                            Code = "B",
                            Label = "B"
                        },
                        new
                        {
                            Id = 3,
                            Code = "C",
                            Label = "C"
                        },
                        new
                        {
                            Id = 4,
                            Code = "D",
                            Label = "D"
                        },
                        new
                        {
                            Id = 5,
                            Code = "F",
                            Label = "F"
                        });
                });

            modelBuilder.Entity("MsfConsulting.Lausa.Domain.Model.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("MsfConsulting.Lausa.Domain.Model.Unenrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Unenrollments");
                });

            modelBuilder.Entity("MsfConsulting.Lausa.Domain.Model.Enrollment", b =>
                {
                    b.HasOne("MsfConsulting.Lausa.Domain.Model.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MsfConsulting.Lausa.Domain.Model.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");

                    b.HasOne("MsfConsulting.Lausa.Domain.Model.Student", "Student")
                        .WithMany("Enrollements")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Grade");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MsfConsulting.Lausa.Domain.Model.Unenrollment", b =>
                {
                    b.HasOne("MsfConsulting.Lausa.Domain.Model.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MsfConsulting.Lausa.Domain.Model.Student", "Student")
                        .WithMany("Unenrollements")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MsfConsulting.Lausa.Domain.Model.Student", b =>
                {
                    b.Navigation("Enrollements");

                    b.Navigation("Unenrollements");
                });
#pragma warning restore 612, 618
        }
    }
}
